#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Created on Sat Apr  2 16:07:40 2022

@author: f1lem0n
"""
import sys
import finder as fd
from datetime import datetime

terminate = ('exit', 'quit', 'terminate')

def init(terminate):
    
    '''Initializes the program.
    
    (terminate) - Tuple containing exit commands.'''
    
    welcome()
    filepath_open = filepath(terminate)
    header, seq = fd.openseq(filepath_open)
    motif = specmotif(terminate)
    idxs = fd.findmotif(seq, motif)
    seq_capped = fd.motifcaps(seq, idxs, motif)
    wrapped_output = fd.outwrapper(idxs, header, seq_capped)
    
    action = input('>')
    if action in terminate:
        sys.exit()
    elif action == 'print':
        outprint(wrapped_output)
    elif action == 'save':
        outsave(wrapped_output, terminate)


def welcome():
    
    '''Displays welcome message.'''
    
    print(fd.lnsep(60),
          'Welcome!\n',
          'In order to exit type in \'exit\', \'quit\' or \'terminate\'.\n',
          'After specyfing file path and motif seq type:\n',
          '>\'print\' to display output directly in console\n',
          '>\'save\' to save file to specified file path\n',
          fd.lnsep(60), 
          sep = '', end = '')

def filepath(terminate):
    
    '''Allows user to specify path to input FASTA file.'''
    
    file = input('Open from (path): ')
    if file in terminate:
        sys.exit()
        
    return file


def specmotif(terminate):
    
    '''Allows user to specify motif to search.'''
        
    motif = input('Define motif (str): ')
    if len(motif) != 0:
        for char in motif:
            if char.isalpha():
                continue
            else:
                print('Forbidden character(s) found in motif!')
                specmotif()
    elif motif in terminate:
        sys.exit()
    else:
        print('Motif not defined!')
        specmotif()
    
    return motif

def outprint(wrapped_output):
    
    '''Prints output directly in the terminal.
    
    (wrapped_output) - Output that user wishes to print/save. 
    Generated by outwrapper() function in finder.py module.'''
    
    print('\nOUTPUT:')
    for i in wrapped_output:
        print(i, sep = '', end = '')
   
        
def outsave(wrapped_output, terminate):
    
    '''Allows user to save output file to specified path.'''
    
    for i in wrapped_output:
        wrapped_output = ''.join(wrapped_output)
    
    filepath_save = input('Save to (path): ')
    if filepath_save in terminate:
        sys.exit()
    else:
        try:
            date = datetime.now()
            newfile = open(filepath_save, 'w+')
            newfile.write(f'Created on: {date.strftime("%Y-%m-%d %H:%M:%S")}\n'
                          + wrapped_output)
        except FileNotFoundError:
            outsave(wrapped_output, terminate)
    

init(terminate)